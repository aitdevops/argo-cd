apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: backend
  labels:
    app.kubernetes.io/name: user-service
    app.kubernetes.io/instance: user-service-instance
    app.kubernetes.io/version: "1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: user-service-instance
      app.kubernetes.io/name: user-service
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: user-service-instance
        app.kubernetes.io/name: user-service
    spec:
      tolerations:
        - key: "role"
          operator: "Equal"
          value: "frontend-backend-redis"
          effect: "NO_SCHEDULE"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "role"
                    operator: "In"
                    values:
                      - "frontend-backend-redis"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - user-service
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: k8s-service-account
      containers:
        - name: user-service
          image: "us-central1-docker.pkg.dev/devops-projects-426703/aitdevops-gke/user-service:814e3e62984dfdb4f314554b030a2ee113d97ed4-user"
          ports:
            - containerPort: 3002
          livenessProbe:
            httpGet:
              path: /
              port: 3002
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 3002
            initialDelaySeconds: 30
            timeoutSeconds: 5
